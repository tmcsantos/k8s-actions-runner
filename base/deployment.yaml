apiVersion: apps/v1
kind: Deployment
metadata:
  name: actions-runner
  labels:
    app: actions-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: actions-runner
  template:
    metadata:
      labels:
        app: actions-runner
    spec:
      securityContext:
        #runAsUser: 1000
        #runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: docker-storage
          emptyDir: {}
        - name: docker-certs
          emptyDir: {}
        - name: github-workspace
          emptyDir: {}
        - name: runner-config
          emptyDir: {}
      imagePullSecrets:
        - name: github-package-registry
      containers:
        - name: runner
          #image: docker.pkg.github.com/tmcsantos/k8s-actions-runner/gh-runner:2.164.0 
          image: tmcsantos/gh-runner:2.164.0 
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                # If pod is evicted, the secrets are no longer valid
                command: ["/bin/bash", "-c", "removeRunner.sh"]
          envFrom:
            - secretRef:
                name: actions-runner  
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: DOCKER_CERT_PATH
              value: /certs/client

          volumeMounts:
            - name: docker-certs
              mountPath: /certs
            - name: runner-config
              mountPath: /app
            - name: github-workspace
              mountPath: /home/github
        - name: docker
          image: docker:stable-dind
          #image: docker:stable-dind-rootless
          #args: ["--experimental"]
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          securityContext:
            # docker:<version>-dind-rootless image runs as a non-root user (UID 1000). 
            # However, --privileged is still required for disabling seccomp, AppArmor, and mount masks.
            privileged: true
          volumeMounts:
            - name: docker-storage
              mountPath: /var/lib/docker
            - name: docker-certs
              mountPath: /certs
            - name: github-workspace
              mountPath: /home/github
